{"version":3,"file":"3891.d423511c27ec5ed72afb.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/components/cloud_preview_modal/preview_modal_content.tsx","webpack://mattermost-webapp/./src/components/cloud_preview_modal/preview_modal_content_controller.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nimport MattermostLogo from 'components/widgets/icons/mattermost_logo';\n\nimport type {PreviewModalContentData} from './preview_modal_content_data';\n\nimport './preview_modal_content.scss';\n\ninterface Props {\n    content: PreviewModalContentData;\n}\n\nconst PreviewModalContent: React.FC<Props> = ({content}) => {\n    const intl = useIntl();\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [showControls, setShowControls] = useState(false);\n\n    const handlePlay = () => {\n        setIsPlaying(true);\n        videoRef.current?.play();\n    };\n\n    const handleVideoClick = () => {\n        if (!isPlaying) {\n            handlePlay();\n        }\n    };\n\n    const handleVideoPause = () => {\n        setIsPlaying(false);\n    };\n\n    const renderVideoContent = () => {\n        if (!content.videoUrl) {\n            return null;\n        }\n\n        // Handle direct video files\n        if (content.videoUrl.endsWith('.mp4') || content.videoUrl.endsWith('.webm') || content.videoUrl.endsWith('.mov')) {\n            return (\n                <div\n                    className='custom-video-wrapper'\n                    onMouseEnter={() => isPlaying && setShowControls(true)}\n                    onMouseLeave={() => setShowControls(false)}\n                >\n                    <video\n                        ref={videoRef}\n                        src={content.videoUrl}\n                        poster={content.videoPoster}\n                        controls={isPlaying && showControls}\n                        loop={true}\n                        data-testid='video-element'\n                        onClick={handleVideoClick}\n                        onPause={handleVideoPause}\n                        onPlay={() => setIsPlaying(true)}\n                    >\n                        <track kind='captions'/>\n                    </video>\n                    {!isPlaying && (\n                        <button\n                            className='custom-play-button'\n                            onClick={handlePlay}\n                            aria-label={intl.formatMessage({\n                                id: 'cloud_preview_modal.play_video',\n                                defaultMessage: 'Play video',\n                            })}\n                        >\n                            <svg\n                                width='48'\n                                height='48'\n                                viewBox='0 0 48 48'\n                                fill='none'\n                            >\n                                <circle\n                                    cx='24'\n                                    cy='24'\n                                    r='24'\n                                    fill='rgba(255,255,255,0.9)'\n                                />\n                                <polygon\n                                    points='20,16 34,24 20,32'\n                                    fill='#1e3a8a'\n                                />\n                            </svg>\n                        </button>\n                    )}\n                </div>\n            );\n        }\n\n        // Handle images\n        if (content.videoUrl.endsWith('.jpg') || content.videoUrl.endsWith('.jpeg') || content.videoUrl.endsWith('.png') || content.videoUrl.endsWith('.gif') || content.videoUrl.endsWith('.webp')) {\n            return (\n                <img\n                    src={content.videoUrl}\n                    alt={intl.formatMessage(content.title)}\n                />\n            );\n        }\n\n        // Fallback for other URLs - treat as image\n        return (\n            <img\n                src={content.videoUrl}\n                alt={intl.formatMessage(content.title)}\n            />\n        );\n    };\n\n    return (\n        <div className='preview-modal-content'>\n            {content.skuLabel && content.skuLabel.defaultMessage && (\n                <div className='preview-modal-content__sku-label'>\n                    <MattermostLogo className='preview-modal-content__sku-label-logo'/>\n                    <span>{intl.formatMessage(content.skuLabel)}</span>\n                </div>\n            )}\n            <h2 className='preview-modal-content__title'>{intl.formatMessage(content.title)}</h2>\n            <div className='preview-modal-content__subtitle'>\n                {intl.formatMessage(content.subtitle)}\n            </div>\n            {content.videoUrl && (\n                <div className='preview-modal-content__media-container'>\n                    {renderVideoContent()}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PreviewModalContent;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useState, useCallback} from 'react';\nimport {useIntl} from 'react-intl';\n\nimport {ArrowLeftIcon, ArrowRightIcon} from '@mattermost/compass-icons/components';\nimport {GenericModal} from '@mattermost/components';\n\nimport PreviewModalContent from './preview_modal_content';\nimport {modalContent} from './preview_modal_content_data';\nimport type {PreviewModalContentData} from './preview_modal_content_data';\n\nimport './preview_modal_controller.scss';\n\ninterface Props {\n    show: boolean;\n    onClose: () => void;\n    contentData?: PreviewModalContentData[];\n}\n\nconst PreviewModalController: React.FC<Props> = ({show, onClose, contentData}) => {\n    const intl = useIntl();\n    const [currentIndex, setCurrentIndex] = useState(0);\n\n    // Use provided contentData or default to filtered modalContent\n    // Use passed contentData if it's provided otherwise use the default mission ops content\n    const activeContentData = contentData || modalContent.filter((content) => content.useCase === 'mission-ops');\n\n    const handlePrevious = useCallback(() => {\n        setCurrentIndex((prev) => Math.max(0, prev - 1));\n    }, []);\n\n    const handleNext = useCallback(() => {\n        setCurrentIndex((prev) => Math.min(activeContentData.length - 1, prev + 1));\n    }, [activeContentData.length]);\n\n    const handleSkip = useCallback(() => {\n        onClose();\n    }, [onClose]);\n\n    const isFirstSlide = currentIndex === 0;\n    const isLastSlide = currentIndex === activeContentData.length - 1;\n\n    if (activeContentData.length === 0) {\n        return null;\n    }\n\n    // Custom footer content with pagination and navigation buttons\n    const footerContent = (\n        <div className='preview-modal-controller__footer'>\n            <div className='preview-modal-controller__pagination'>\n                <div\n                    className='preview-modal-controller__pagination-dots'\n                    data-testid='pagination-dots'\n                >\n                    {activeContentData.map((_, index) => (\n                        <div\n                            key={`dot-${index}`}\n                            className={`preview-modal-controller__dot ${index === currentIndex ? 'preview-modal-controller__dot--active' : ''}`}\n                        />\n                    ))}\n                </div>\n                <span className='preview-modal-controller__page-counter'>\n                    {currentIndex + 1}{'/'}{activeContentData.length}\n                </span>\n            </div>\n\n            <div className='preview-modal-controller__navigation-buttons'>\n                {isFirstSlide && (\n                    <button\n                        className='btn btn-quaternary'\n                        onClick={handleSkip}\n                    >\n                        {intl.formatMessage({\n                            id: 'cloud_preview_modal.skip',\n                            defaultMessage: 'Skip for now',\n                        })}\n                    </button>\n                )}\n\n                {!isFirstSlide && (\n                    <button\n                        className='btn btn-tertiary'\n                        onClick={handlePrevious}\n                    >\n                        <ArrowLeftIcon size={18}/>\n                        {intl.formatMessage({\n                            id: 'cloud_preview_modal.previous',\n                            defaultMessage: 'Previous',\n                        })}\n                    </button>\n                )}\n\n                <button\n                    className='btn btn-primary'\n                    onClick={isLastSlide ? onClose : handleNext}\n                >\n                    {isLastSlide ? (\n                        intl.formatMessage({\n                            id: 'cloud_preview_modal.done',\n                            defaultMessage: 'Finish',\n                        })\n                    ) : (\n                        <>\n                            {intl.formatMessage({\n                                id: 'cloud_preview_modal.next',\n                                defaultMessage: 'Next',\n                            })}\n                            <ArrowRightIcon size={18}/>\n                        </>\n                    )}\n                </button>\n            </div>\n        </div>\n    );\n\n    return (\n        <GenericModal\n            show={show}\n            onHide={onClose}\n            compassDesign={true}\n            enforceFocus={true}\n            ariaLabel={intl.formatMessage({\n                id: 'cloud_preview_modal.aria_label',\n                defaultMessage: 'Cloud Preview Introduction',\n            })}\n            showHeader={true}\n            showCloseButton={true}\n            bodyPadding={true}\n            footerContent={footerContent}\n            className='preview-modal-controller'\n        >\n            <PreviewModalContent content={activeContentData[currentIndex]}/>\n        </GenericModal>\n    );\n};\n\nexport default PreviewModalController;\n"],"names":["_ref","content","intl","useIntl","videoRef","useRef","isPlaying","setIsPlaying","useState","showControls","setShowControls","handlePlay","_videoRef$current","current","play","React","className","skuLabel","defaultMessage","MattermostLogo","formatMessage","title","subtitle","videoUrl","endsWith","onMouseEnter","onMouseLeave","ref","src","poster","videoPoster","controls","loop","onClick","handleVideoClick","onPause","handleVideoPause","onPlay","kind","id","width","height","viewBox","fill","cx","cy","r","points","alt","PreviewModalController","show","onClose","contentData","currentIndex","setCurrentIndex","activeContentData","modalContent","filter","useCase","handlePrevious","useCallback","prev","Math","max","handleNext","min","length","handleSkip","isFirstSlide","isLastSlide","footerContent","map","_","index","key","concat","ArrowLeftIcon","size","ArrowRightIcon","GenericModal","onHide","compassDesign","enforceFocus","ariaLabel","showHeader","showCloseButton","bodyPadding","PreviewModalContent","propTypes","_pt","isRequired"],"sourceRoot":""}